version: '3.8'

services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tokoroten
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  worker:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: celery -A app.celery_app worker --loglevel=info
    depends_on:
      - backend
      - redis
    volumes:
      - ./server:/app
      - ./ai_models:/app/ai_models
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tokoroten
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tokoroten
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
